name: kwctl release
on:
  push:
    tags:
    - 'v*'
env:
  CARGO_TERM_COLOR: always
jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace
  release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release kwctl ${{ github.ref }}
        draft: false
        prerelease: false
  build-linux-x86_64:
    name: Build x86_64 (musl) binary
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
    - uses: actions/checkout@v2
    - name: Setup rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Setup musl for x86_64
      run: |
        curl https://musl.cc/x86_64-linux-musl-cross.tgz | tar -xz
        echo "$PWD/x86_64-linux-musl-cross/bin" >> $GITHUB_PATH
    - run: rustup target add x86_64-unknown-linux-musl
    - name: Build kwctl
      env:
        CC: x86_64-linux-musl-gcc
      run: cargo build --target=x86_64-unknown-linux-musl --release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.release.steps.create-release.outputs.upload_url }}
        asset_name: kwctl-linux-x86_64
        asset_path: target/x86_64-unknown-linux-musl/release/kwctl
  build-linux-aarch64:
    name: Build aarch64 (musl) binary
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
    - uses: actions/checkout@v2
    - name: Setup rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Setup musl for aarch64
      run: |
        curl https://musl.cc/aarch64-linux-musl-cross.tgz | tar -xz
        echo "$PWD/aarch64-linux-musl-cross/bin" >> $GITHUB_PATH
    - run: rustup target add aarch64-unknown-linux-musl
    - name: Build kwctl
      env:
        CC: aarch64-linux-musl-gcc
      run: cargo build --target=aarch64-unknown-linux-musl --release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.release.steps.create-release.outputs.upload_url }}
        asset_name: kwctl-linux-aarch64
        asset_path: target/aarch64-unknown-linux-musl/release/kwctl
  build-windows-x86_64:
    name: Build x86_64 (msvc) binary
    runs-on: windows-latest
    needs:
      - release
    steps:
    - uses: actions/checkout@v2
    - name: Setup rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - run: rustup target add x86_64-pc-windows-msvc
    - name: Build kwctl
      run: cargo build --target=x86_64-pc-windows-msvc --release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.release.steps.create-release.outputs.upload_url }}
        asset_name: kwctl-windows-x86_64
        asset_path: target/x86_64-pc-windows-msvc/release/kwctl
