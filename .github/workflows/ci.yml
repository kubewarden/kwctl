on:
  - push
  - pull_request
  - workflow_call

name: Continuous integration

# Declare default permissions as read only.
permissions: read-all

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Cargo check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: enable git long paths on Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.longpaths true

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # aws-lc-sys CMakefile contains a directive that has been removed from
      # cmake v4 that has just been released (march 2025). The build failure
      # can be fixed by setting an environment variable
      - name: fix aws-lc-sys building with cmake 4.0.0
        if: matrix.os == 'windows-latest'
        run: |
          echo 'CMAKE_POLICY_VERSION_MINIMUM="3.5"' >> $GITHUB_ENV

      - name: Run cargo check
        run: cargo check

  version-check:
    name: Check Cargo.toml version
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Download source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check cargo file version
        run: |
          CARGO_VERSION=$(sed  -n 's,^version\s*= \"\(.*\)\",\1,p' Cargo.toml)
          TAG_VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')

          if [ "$CARGO_VERSION" != "$TAG_VERSION" ];then
              echo "::error title=Invalid Cargo.toml version::Cargo.toml version does not match the tag version"
              exit 1
          fi

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run cargo test
        run: cargo test --workspace --bins

  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
      - name: run e2e tests
        run: make e2e-tests

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@735e5933943122c5ac182670a935f54a949265c1 # v2.52.4
        with:
          tool: cargo-llvm-cov

      - name: Install cosign # this is needed by some of the e2e tests
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Generate tests coverage
        run: cargo llvm-cov --lcov --output-path lcov.info

      - name: Upload unit-tests coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: lcov.info
          fail_ci_if_error: true
          name: unit-tests and e2e-tests
          verbose: true
          token: ${{ secrets.CODECOV_ORG_TOKEN }}

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: rustup component add rustfmt
      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: rustup component add clippy
      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: shellcheck $(find scripts/ -name '*.sh')

  docs:
    name: Update documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: |
          make build-docs
          if ! git diff --quiet cli-docs.md; then
            echo "Changes detected in cli-docs.md. Please run `make build-docs` and commit the changes."
            gh run cancel ${{ github.run_id }}
          fi

  spelling:
    name: Spell Check with Typos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Spell Check Repo
        uses: crate-ci/typos@0f0ccba9ed1df83948f0c15026e4f5ccfce46109 # v1.32.0
